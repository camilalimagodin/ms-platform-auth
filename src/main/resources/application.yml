spring:
  application:
    name: ms-platform-auth
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:authdb}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/platform}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8080/realms/platform/protocol/openid-connect/certs}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:platform-auth}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:secret}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/platform}
            authorization-uri: ${KEYCLOAK_AUTH_URI:http://localhost:8080/realms/platform/protocol/openid-connect/auth}
            token-uri: ${KEYCLOAK_TOKEN_URI:http://localhost:8080/realms/platform/protocol/openid-connect/token}
            user-info-uri: ${KEYCLOAK_USERINFO_URI:http://localhost:8080/realms/platform/protocol/openid-connect/userinfo}
            user-name-attribute: preferred_username

server:
  port: ${SERVER_PORT:8081}

keycloak:
  realm: ${KEYCLOAK_REALM:platform}
  auth-server-url: ${KEYCLOAK_URL:http://localhost:8080}
  resource: ${KEYCLOAK_CLIENT_ID:platform-auth}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:secret}
  ssl-required: external
  public-client: false
  confidential-port: 0

logging:
  level:
    org.springframework.security: DEBUG
    org.keycloak: DEBUG
